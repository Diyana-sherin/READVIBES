<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin - Add New Book</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css"
        integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    <style>
        /* Theme colors */
        body {
            background-color: #f2f2f2;
            color: #333;
        }

        .card {
            background-color: #e0e0e0;
            border: none;
            border-radius: 8px;
        }

        .form-label,
        h2 {
            color: #555;
        }

        .content-title {
            color: #333;
            font-weight: bold;
        }

        .btn-primary {
            background-color: #666;
            border: none;
        }

        .btn-primary:hover {
            background-color: #555;
        }

        .form-control {
            border-radius: 6px;
            border: 1px solid #ccc;
            background-color: #f9f9f9;
        }

        .error-message {
            color: red;
            font-size: 0.875em;
        }

        .image-cropper {
            display: none;
            width: 300px;
            height: 200px;
            margin-top: 10px;
            position: relative;
        }

        .thumbnail {
            display: inline-block;
            margin: 5px;
            position: relative;
        }

        .thumbnail img {
            width: 80px;
            height: auto;
            border: 1px solid #ddd;
            padding: 4px;
            background-color: #f8f9fa;
        }

        .remove-icon {
            position: absolute;
            top: 0;
            right: 0;
            color: red;
            cursor: pointer;
            font-size: 18px;
            background: white;
            border-radius: 50%;
        }
       

        .error-message {
            color: red;
            font-size: 14px;
            display: none;
        }
        
    </style>
</head>

<body>
    {{> admin/header}}
    <div class="main-content mt-5">
        <div class="container" style="z-index: -1;">
            {{#if message}}
            <div class="alert alert-danger" role="alert">
                {{message}}
            </div>
            {{/if}}
            <h2 class="text-center">Add Books</h2>
            <form id="productForm" action="/admin/addBooks" method="POST" enctype="multipart/form-data"
                onsubmit="return validateForm()">
                <!-- Book Name -->
                <div class="form-group">
                    <label for="bookName" class="form-label">Book Name</label>
                    <input type="text" placeholder="Enter book name" name="bookName" class="form-control" id="bookName">
                    <div id="productName-error" class="error-message"></div>
                </div>

                <div class="form-group">
                    <label for="authorName">Author Name</label>
                    <input type="text" class="form-control" id="authorName" name="authorName"
                        placeholder="Enter author name">
                    <div id="authorName-error" class="error-message"></div>
                </div>

                <!-- Description -->
                <div class="form-group">
                    <label for="descriptionid" class="form-label">Description</label>
                    <textarea placeholder="Enter description" id="descriptionid" name="description" class="form-control"
                        rows="4"></textarea>
                    <div id="description-error" class="error-message"></div>
                </div>

                <!-- Pricing and Quantity -->
                <div class="form-row">
                    <div class="form-group col-md-4">
                        <label for="regularPrice" class="form-label">Regular Price</label>
                        <input placeholder="Enter regular price" name="regularPrice" type="text" class="form-control"
                            id="regularPrice">
                        <div id="regularPrice-error" class="error-message"></div>
                    </div>
                    <div class="form-group col-md-4">
                        <label for="salePrice" class="form-label">Sale Price</label>
                        <input placeholder="Enter sale price" name="salePrice" type="text" class="form-control"
                            id="salePrice">
                        <div id="salePrice-error" class="error-message"></div>
                    </div>
                    <div class="form-group col-md-4">
                        <label for="quantity" class="form-label">Quantity</label>
                        <input placeholder="Enter quantity" name="quantity" type="text" class="form-control"
                            id="quantity">
                        <div id="quantity-error" class="error-message"></div>
                    </div>
                </div>

                <!-- Category -->
                <div class="form-group">
                    <label for="category" class="form-label">Category</label>
                    <select class="form-control" name="category" id="category">
                        <option value="">Select Category</option>
                        {{#each categories}}
                        <option value="{{this._id}}">{{this.name}}</option>
                        {{/each}}
                    </select>
                    <div id="category-error" class="error-message"></div>
                </div>

                <!-- Three Image Upload Sections -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h4>Choose Images (up to 3)</h4>
                    </div>
                    <div class="card-body">
                        <!-- Three File Inputs for Image Uploading -->
                        <div class="row mb-3">
                            <!-- Image Input 1 -->
                            <div class="col-md-4">
                                <input class="form-control" type="file" id="input1" accept="image/*" name="images"
                                    onchange="handleFileSelect(event, 1)" required>
                                <div id="images-error" class="error-message"></div>
                                <img src="" alt="" id="imgView1" class="img-thumbnail mt-2">
                                <div class="image-cropper" id="cropperContainer1">
                                    <img src="" id="croppedImg1" alt="">
                                    <button type="button" id="saveButton1" class="btn btn-primary btn-sm"
                                        onclick="saveCrop(1)">Save</button>
                                </div>
                                <div id="thumbnailsContainer1" class="mt-3"></div>
                            </div>
                            <!-- Image Input 2 -->
                            <div class="col-md-4">
                                <input class="form-control" type="file" id="input2" accept="image/*" name="images"
                                    onchange="handleFileSelect(event, 2)" required>
                                <img src="" alt="" id="imgView2" class="img-thumbnail mt-2">
                                <div class="image-cropper" id="cropperContainer2">
                                    <img src="" id="croppedImg2" alt="">
                                    <button type="button" id="saveButton2" class="btn btn-primary btn-sm"
                                        onclick="saveCrop(2)">Save</button>
                                </div>
                                <div id="thumbnailsContainer2" class="mt-3"></div>
                            </div>
                            <!-- Image Input 3 -->
                            <div class="col-md-4">
                                <input class="form-control" type="file" id="input3" accept="image/*" name="images"
                                    onchange="handleFileSelect(event, 3)" required>
                                <img src="" alt="" id="imgView3" class="img-thumbnail mt-2">
                                <div class="image-cropper" id="cropperContainer3">
                                    <img src="" id="croppedImg3" alt="">
                                    <button type="button" id="saveButton3" class="btn btn-primary btn-sm"
                                        onclick="saveCrop(3)">Save</button>
                                </div>
                                <div id="thumbnailsContainer3" class="mt-3"></div>
                            </div>
                        </div>
                        <!-- Publish Button -->
                        <button class="btn btn-primary" type="button" onclick="validateAndSubmit()">Publish</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    {{> admin/footer}}

    <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
    <script>
        let cropperInstances = {};

        function validateAndSubmit() {
            if (validateForm()) {
                document.forms[0].submit();
            }
        }

        function handleFileSelect(event, index) {
            const input = event.target;
            const file = input.files[0];
            const cropperContainer = document.getElementById("cropperContainer" + index);
            const imgElement = document.getElementById("croppedImg" + index);

            if (file) {
                cropperContainer.style.display = "block";
                imgElement.src = URL.createObjectURL(file);
                imgElement.onload = () => {
                    if (cropperInstances[index]) {
                        cropperInstances[index].destroy();
                    }
                    cropperInstances[index] = new Cropper(imgElement, {
                        aspectRatio: 6 / 9,
                        viewMode: 1,
                    });
                };
            }
        }

        function saveCrop(index) {
            const cropper = cropperInstances[index];
            if (cropper) {
                const canvas = cropper.getCroppedCanvas();
                const imgView = document.getElementById("imgView" + index);
                imgView.src = canvas.toDataURL("image/png");
                document.getElementById("cropperContainer" + index).style.display = "none";
            }
        }

        function validateForm() {
            let isValid = true;
            clearErrorMessages();

            const productName = document.getElementById("bookName").value.trim();
            if (!productName) {
                displayErrorMessage("productName-error", "Book name is required.");
                isValid = false;
            }
            const authorName = document.getElementById("authorName").value.trim();
            if (!authorName) {
                displayErrorMessage("authorName-error", "Author name is required.");
                isValid = false;
            }
            const description = document.getElementById("descriptionid").value.trim();
            if (!description) {
                displayErrorMessage("description-error", "Description is required.");
                isValid = false;
            }
            const regularPrice = document.getElementById("regularPrice").value.trim();
            if (!regularPrice || isNaN(regularPrice) || regularPrice <= 0) {
                displayErrorMessage("regularPrice-error", "Valid regular price is required.");
                isValid = false;
            }
            const salePrice = document.getElementById("salePrice").value.trim();
            if (!salePrice || isNaN(salePrice) || salePrice <= 0) {
                displayErrorMessage("salePrice-error", "Valid sale price is required.");
                isValid = false;
            }
            const quantity = document.getElementById("quantity").value.trim();
            if (!quantity || isNaN(quantity) || quantity <= 0) {
                displayErrorMessage("quantity-error", "Valid quantity is required.");
                isValid = false;
            }
            const category = document.getElementById("category").value;
            if (!category) {
                displayErrorMessage("category-error", "Category is required.");
                isValid = false;
            }
           /* if (images.files.length === 0) {
                displayErrorMessage("images-error", 'Please select an image.');
                isValid = false;
            }*/


            return isValid;
        }

        function displayErrorMessage(id, message) {
            const errorElement = document.getElementById(id);
            errorElement.textContent = message;
            errorElement.style.display = "block"; 
        }

        function clearErrorMessages() {
            const errorMessages = document.querySelectorAll(".error-message");
            errorMessages.forEach(errorMessage => {
                errorMessage.textContent = "";
                errorMessage.style.display = "none"; 
            });
        }

    </script>
</body>

</html>